 # name: Deploy .NET API to Remote VM
name: Database Migration

on:
  push:
    branches:
      - main # or your desired branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x" # specify your .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Publish the project
        run: dotnet publish --configuration Release --output ./publish

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-api
          path: ./publish

      - name: Deploy to remote VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # SSH private key for authentication
        run: |
          scp -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no -r ./publish azureuser@40.87.131.145:/Backend
          ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no user@remote-vm << 'EOF'
            cd /Backend
            dotnet Whoknows-backend.dll # Replace YourProject.dll with the name of your DLL
          EOF

      - name: Run EF Core Migrations
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # SSH private key for authentication
        run: |
          ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no user@remote-vm << 'EOF'
            cd /Backend
            dotnet Whoknows-backend.dll database update # Run migrations here
          EOF


