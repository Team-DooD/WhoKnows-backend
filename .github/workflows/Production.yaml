# name: Deploy .NET API to Remote VM
name: Deploy to VM and Database Migration

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Publish the project
        run: dotnet publish --configuration Release --output ./publish

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-api
          path: ./publish

      - name: Deploy inside Docker container
        env:
          SSH_PRIVATE_KEY2: ${{ secrets.SSH_PRIVATE_KEY2 }}
        run: |
          # Run a Docker container and execute the deployment steps within it
          docker run --rm -v $PWD:/work -w /work ubuntu:latest bash -c "
            apt-get update && apt-get install -y openssh-client && \
            
            # Create the key.pem file from the environment variable
            echo \"$SSH_PRIVATE_KEY2\" | tr -d '\r' > key.pem && \
            chmod 400 key.pem && \
            
            # Remove old files from the remote VM
            ssh -i key.pem -o StrictHostKeyChecking=no azureuser@40.87.131.145 << 'EOF'
              rm -rf /Backend/publish/*
              echo \"Old files deleted from /Backend/publish\"
            EOF
            
            # Copy the new publish folder to the remote VM
            scp -i key.pem -o StrictHostKeyChecking=no -r ./publish azureuser@40.87.131.145:Backend/
            
            # Start the .NET application on the remote server
            ssh -i key.pem -o StrictHostKeyChecking=no azureuser@40.87.131.145 << 'EOF'
              cd Backend/publish/
              nohup dotnet \"Whoknows backend.dll\" &
              echo \"Application started successfully\"
            EOF
          "

                - name: Run EF Core Migrations
        # env:
        #   SSH_PRIVATE_KEY2: ${{ secrets.SSH_PRIVATE_KEY2 }} # SSH private key for authentication
        # run: |
        #   ssh -i key.pem -o StrictHostKeyChecking=no azureuser@40.87.131.145 << 'EOF'
        #     cd /Backend
        #     dotnet "Whoknows backend.dll" database update # Run migrations here
        #   EOF